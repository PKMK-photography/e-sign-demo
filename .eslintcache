[{"/Users/mattbodily/Documents/projects/e-sign-demo/src/index.js":"1","/Users/mattbodily/Documents/projects/e-sign-demo/src/App.js":"2","/Users/mattbodily/Documents/projects/e-sign-demo/src/reportWebVitals.js":"3","/Users/mattbodily/Documents/projects/e-sign-demo/src/Components/Canvas/Canvas.js":"4"},{"size":500,"mtime":1607631562778,"results":"5","hashOfConfig":"6"},{"size":180,"mtime":1607632984990,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607631562778,"results":"8","hashOfConfig":"6"},{"size":3243,"mtime":1607642841170,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ipel2t",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mattbodily/Documents/projects/e-sign-demo/src/index.js",[],["19","20"],"/Users/mattbodily/Documents/projects/e-sign-demo/src/App.js",[],"/Users/mattbodily/Documents/projects/e-sign-demo/src/reportWebVitals.js",[],"/Users/mattbodily/Documents/projects/e-sign-demo/src/Components/Canvas/Canvas.js",["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":82,"column":23,"nodeType":"29","endLine":82,"endColumn":30},{"ruleId":"27","severity":1,"message":"30","line":84,"column":8,"nodeType":"31","endLine":84,"endColumn":17,"suggestions":"32"},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"react-hooks/exhaustive-deps","The ref value 'canvasRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'canvasRef.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has a missing dependency: 'contract'. Either include it or remove the dependency array.","ArrayExpression",["35"],"no-global-assign","no-unsafe-negation",{"desc":"36","fix":"37"},"Update the dependencies array to be: [context, contract]",{"range":"38","text":"39"},[2554,2563],"[context, contract]"]